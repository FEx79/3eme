/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Applet;

import java.lang.reflect.InvocationTargetException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JApplet;

/**
 *
 * @author T4g1
 */
public class AppletLogin extends javax.swing.JApplet {
    private URL servletURL;
    private Totalisateur totalisateur;
    
    /**
     * Initializes the applet AppletLogin
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppletLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                @Override
                public void run() {
                    initComponents();
                    
                    // URL de contact pour le servlet
                    URL currentPage = getDocumentBase();
                    
                    String protocol = currentPage.getProtocol();
                    String host = currentPage.getHost();
                    int port = currentPage.getPort();
                    
                    try {
                        servletURL = new URL(
                                protocol, host, port,
                                "/Web_Applic_Reservations/loginServlet"
                        );
                    } catch (MalformedURLException ex) {
                        Logger.getLogger(AppletLogin.class.getName()).log(
                                Level.SEVERE, null, ex);
                    }
                    
                    // Configure les label
                    displayDateBX.setPays("Europe/Brussels");
                    displayDateNY.setPays("America/New York");
                    displayDateTKO.setPays("Asia/Tokyo");
                    
                    // Configure le Totalistateur
                    totalisateur = new Totalisateur(chanceLabel, chanceNumber);
                    totalisateur.addGenerator(displayDateBX);
                    totalisateur.addGenerator(displayDateNY);
                    totalisateur.addGenerator(displayDateTKO);
                    
                    // Thread de gestion de l'heure
                    Thread threadDateBX = new Thread(displayDateBX);
                    Thread threadDateNY = new Thread(displayDateNY);
                    Thread threadDateTKO = new Thread(displayDateTKO);
                    
                    // Thread pour la génération du numéro magique
                    Thread threadTotalisateur = new Thread(totalisateur);
                    
                    // Lance les thread
                    threadDateBX.start();
                    threadDateNY.start();
                    threadDateTKO.start();
                    threadTotalisateur.start();
                }
            });
        } catch (InterruptedException | InvocationTargetException ex) {
            Logger.getLogger(AppletLogin.class.getName()).log(
                                Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        champNom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        bouttonLogin = new javax.swing.JButton();
        bouttonGenerer = new javax.swing.JButton();
        champPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        displayDateBX = new Applet.DisplayDate();
        displayDateNY = new Applet.DisplayDate();
        displayDateTKO = new Applet.DisplayDate();
        chanceLabel = new javax.swing.JLabel();
        chanceNumber = new javax.swing.JLabel();

        jLabel2.setText("Mot de passe:");

        jLabel1.setText("Nom:");

        bouttonLogin.setText("Se connecter");
        bouttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bouttonLoginActionPerformed(evt);
            }
        });

        bouttonGenerer.setText("Générer un mot de passe");
        bouttonGenerer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bouttonGenererActionPerformed(evt);
            }
        });

        jLabel3.setText("Brussels: ");

        jLabel4.setText("New York: ");

        jLabel5.setText("Tokyo:");

        chanceLabel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        chanceLabel.setText("Numéro de chance - réduction de 10%");

        chanceNumber.setText("jLabel7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(bouttonLogin)
                                    .addGap(18, 18, 18)
                                    .addComponent(bouttonGenerer))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(champNom, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                        .addComponent(champPassword))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(displayDateBX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(displayDateTKO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(displayDateNY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(chanceLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(chanceNumber)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(champNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(champPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bouttonLogin)
                    .addComponent(bouttonGenerer))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(displayDateBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(displayDateNY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayDateTKO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(chanceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chanceNumber)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chanceLabel.getAccessibleContext().setAccessibleName("chanceLabel");
        chanceNumber.getAccessibleContext().setAccessibleName("chanceNumber");
    }// </editor-fold>//GEN-END:initComponents

    private void bouttonGenererActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bouttonGenererActionPerformed
        String username = getUserName();
        
        JApplet friend = (JApplet)getAppletContext().getApplet("generateMdp");
        GenerateMDP gm = (GenerateMDP)friend;

        gm.setUsername(username);
    }//GEN-LAST:event_bouttonGenererActionPerformed

    private void bouttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bouttonLoginActionPerformed
        String username = getUserName();
        String password = getPassword();
        
        try {
            String param = "?action=login";
            param += "&username=" + URLEncoder.encode(username);
            param += "&password=" + URLEncoder.encode(password);
           
            //Appel à la servlet
            getAppletContext().showDocument(
                    new URL(servletURL + param));
        } catch (MalformedURLException ex) { 
            System.out.println("URL mal formattée");
        }
    }//GEN-LAST:event_bouttonLoginActionPerformed

    /**
     * Donne le nom d'utilisateur entré dans le champ
     * 
     * @return      Nom saisit
     */
    private String getUserName() {
        return champNom.getText();
    } 
    
    /**
     * Donne le mot de passe entré dans le champ
     * 
     * @return      Password saisit
     */
    private String getPassword() {
        return champPassword.getText();
    }

    /**
     * Permet de recevoir le mot de passe
     * 
     * @param password      Mot de passe
     */
    public void adduser(String username, String password) {
        try {
            String param = "?action=adduser";
            param += "&username=" + URLEncoder.encode(username);
            param += "&password=" + URLEncoder.encode(password);
           
            //Appel à la servlet
            getAppletContext().showDocument(
                    new URL(servletURL + param));
        } catch (MalformedURLException ex) { 
            System.out.println("URL mal formattée");
        }
        
        champNom.setText(username);
        champPassword.setText(password);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bouttonGenerer;
    private javax.swing.JButton bouttonLogin;
    private javax.swing.JTextField champNom;
    private javax.swing.JPasswordField champPassword;
    private javax.swing.JLabel chanceLabel;
    private javax.swing.JLabel chanceNumber;
    private Applet.DisplayDate displayDateBX;
    private Applet.DisplayDate displayDateNY;
    private Applet.DisplayDate displayDateTKO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
