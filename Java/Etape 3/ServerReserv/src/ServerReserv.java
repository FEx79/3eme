import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;

/**
 * Serveur de réservations
 */
public class ServerReserv extends javax.swing.JFrame {
    private int PORT_VOYAGEURS = 40000;
    private int PORT_VILLAGE = 40001;
    private ThServerRMP serverRMP;
    private ThServerRCP serverRCP;
    private final Properties users;

    /**
     * Creates new form ServerReserv
     */
    public ServerReserv() {
        initComponents();
        
        TextAreaOutputStream taos = TextAreaOutputStream.getInstance(output);
        
        users = new Properties();
        
        try {
            users.load(new FileInputStream("src/users.properties"));
            System.out.println("Liste des utilisateurs chargee ...");
        } catch (IOException ex) {
            System.out.println("Impossible d'ouvrir le fichier d'utilisateur");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        stopButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        output.setColumns(20);
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(startButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopButton)
                    .addComponent(startButton)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        if(serverRMP == null || serverRCP == null) {
            System.out.println("Envois des demande de fermeture impossible, le serveur n'est pas lance");
            return;
        }
            
        System.out.println("Envois des demande de fermeture");
        try {
            serverRMP.requestStop();
        } catch (IOException ex) {
            System.out.println("Fermeture du serveur RMP echouee");
        }

        try {
            serverRCP.requestStop();
        } catch (IOException ex) {
            System.out.println("Fermeture du serveur RCP echouee");
        }
            
        try {
            serverRMP.join();
            System.out.println("Fin de la gestion des reservations");
            
            serverRCP.join();
            System.out.println("Fin de la gestion des consultations");
        } catch (InterruptedException ex) {
            System.out.println("Les thread ne se sont pas termine correctement");
        }
    }//GEN-LAST:event_stopButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        System.out.println(
                "Demarrage du serveur sur les ports " +
                PORT_VOYAGEURS + " (VOYAGEURS) et " +
                PORT_VILLAGE + " (VILLAGE)"
        );
        
        serverRMP = new ThServerRMP(this, PORT_VOYAGEURS);
        serverRCP = new ThServerRCP(this, PORT_VILLAGE);
        
        serverRMP.start();
        serverRCP.start();
    }//GEN-LAST:event_startButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerReserv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerReserv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerReserv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerReserv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ServerReserv().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea output;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables

    /**
     * Donne le digest de l'utilisateur donné
     * @param login
     * @return      Digest de l'utilisateur
     */
    public synchronized byte[] getUserDigest(String login) {
        // Fichier bien chargé
        if(users == null) {
            return null;
        }
        
        // Login existant
        if(!users.containsKey(login)) {
            return null;
        }
        
        String password = users.getProperty(login);
        return Request.getDigest(password);
    }
}
